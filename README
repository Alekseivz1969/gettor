OVERVIEW
--------
GetTor is a program for serving Tor and related files over SMTP. Users
interact with GetTor by sending it an email.

The following document explains how to setup GetTor for a server admin.

To deploy GetTor, you'll want a machine that invokes .forward files
for users. You'll also want to have python and rsync installed.

There are some limits with smtp software for outgoing email sizes. You should
check your software to ensure that you can send files that are as large
as the largest files Tor distributes. For postfix, you may want to have a line
that looks like the following in /etc/postfix/main.cf:

    message_size_limit = 30360000

In Exim, the default message size is now 50MB, which should be sufficient. The
value is also adaptable through the config file parameter 'message_size_limit'
in case you need to.

You will want to ensure that you have a properly configured set
of mo files for each translation. Generate and install mo files as follows:

   GetTor.py -r

As an example, for the user 'gettor' we will setup GetTor.py like so:

Your .forward file should look like this:

    gettor@moria:~$ cat .forward
    "|/home/gettor/bin/GetTor.py"

Configure your ~/.gettorrc file (see "Configuration", below).

These are the python files we need to run GetTor.py:

    gettor@moria:~/bin$ ls
    dkim.py              gettor_log.py       gettor.py
    gettor_blacklist.py  gettor_opt.py       gettor_requests.py
    gettor_config.py     gettor_packages.py  gettor_responses.py

Once you have everything installed, you'll want to initialize the file store:

    gettor@moria:~/newbin$ ./gettor.py -f -p

You should see an rsync and finally something like:

    sent 1637 bytes  received 415792532 bytes  9558486.64 bytes/sec
    total size is 415735925  speedup is 1.00
    2009-01-05 16:49:29,226 (9222) Syncing Tor packages done.
    2009-01-05 16:49:30,155 (9222) Building packages done.

Now you'll install the cronjob. This clears the blacklist and updates
packages daily:

    gettor@moria:~/bin$ ./GetTor.py -i
    2009-01-05 17:34:53,911 (16646) Installing cron done.

Now GetTor.py is installed, prepared and ready to serve files. Send it email!

TRANSLATION FILES
-----------------
Provided there is a working locale environment, GetTor will compile and setup
locale files for you as follows:

    gettor@moria:~/bin$ ./GetTor.py -r
    2009-01-08 12:18:09,041 (19287) Installing translation files done.

You can also configure the .mo files to live in another place by telling GetTor
so in the config file, for example:

    localeDir = /home/gettor/gettor/i18n

This will result in GetTor expecting the English .mo file in the directory

    /home/gettor/gettor/i18n/en/LC_MESSAGES/gettor.mo

Also, in case your .po files for some reason live in a different directory
than i18n/ (relative to GetTor.py, as provided by GetTor), you can tell this
to GetTor as follows:

    gettor@moria:~/bin$ ./GetTor.py -r -d /path/to/my/mofiles/directory

Note that GetTor will expect the same directory structure as provided under
i18n/ in the GetTor source package, e.g. 'i18n/en/gettor_en.po',
'i18n/de/gettor_de.po', and so on.

To add a new language to GetTor, one must create a new .po file in subversion
in the proper directory. For Korean, one would create i18n/ko/ and add the
untranslated file (called gettor_ko.po) to that directory. This file should be
translated but partial translations are allowed. Once this file has been
created, the GetTor program does not need to be modified. It does however 
require that one adds a configuration option indicating the newly desired
locale (the default is English):
	
	locale = ko

CONFIGURATION
-------------
A proper GetTor configuration file is expected in the user's home directory
and should look like this:

    gettor@moria:~$ cat .gettorrc
    [global]
    stateDir    = /home/gettor/gettor/state/
    blStateDir  = /home/gettor/gettor/bl/
    wlStateDir  = /home/gettor/gettor/wl/
    distDir     = /home/gettor/gettor/distdir/
    packDir     = /home/gettor/gettor/packdir/
    locale      = en
    logSubSystem= stdout
    logFile     = /home/gettor/gettor/logs/logfile
    localeDir   =  /home/gettor/gettor/i18n/

You can leave any of these lines out, and it will choose a suitable
default.

Here is what each of them is used for individually:

blStateDir:    Blacklisted (hashed) email addresses go here
wlStateDir:    Whitelisted (hashed) email addresses go here
distDir:       Pristine Tor packages as downloaded by rsync will be found here
packDir:       Processed Tor packages ready to be handed out to the user will
               be found here
srcEmail:      The email containing the Tor package will use this as 'From:'
locale:        Choose your default mail and log locale
logFile:       If 'file' logging is chosen, log to this file
logSubSystem:  This has to be one of the following strings:
               'nothing':  Nothing is logged anywhere (Recommended)
               'stdout':   Log to stdout
               'syslog':   Log messages will be written to syslog
               'file':     Log messages will be written to a file (Not that
                           this needs the 'logFile' option in the config file
                           also set to something useful
localeDir:     This is where the 'en/LC_MESSAGES/gettor.mo' or
               'whateverlang/LC_MESSAGES/gettor.mo' should go

WHAT'S DKIM / WHY DKIM?
-----------------------

People who send mail to gettor need to either use a mail provider that
signs outgoing mail with DKIM, or have their email address or domain
added to the whitelist.

"DomainKeys Identified Mail", aka DKIM, is a mechanism that lets the mail
provider prove that the mail is really coming from the domain and sender
it claims to be from.

Currently GMail and Yahoo both support DKIM, along with other more
esoteric domains like paypal, AOL, earthlink, linkedin, etc. You can
check if your mail provider uses DKIM by examining the headers of emails
you send. If there's a "DomainKey-Signature:" header, then you're in
good shape.

If we didn't check the DKIM signature, people could abuse gettor into
mailbombing innocent email addresses -- one short email resulting in a
15MB attachment sent to an address of their choice is quite an attack
multiplier.

There are a few other alternative options (for example, Microsoft uses its
own proprietary design called 'Sender ID'), but since GMail is already
very common for users in blocked countries, we figured DKIM was a good
starting point.

And last, be aware that the set of domains that technically support
DKIM is probably not exactly the same set that we should recommend for
our users, due to other properties of each mail provider like their
privacy policies.

VALIDATION OF REQUESTED FILES
-----------------------------

When a user submits a successful request, GetTor will respond with an email
that has one attachment. This attachment is a zip file with a .z file
extension. The compressed file currently consists of two files: the requested
tool and a gpg signature from the packager of the respective file.

FILE SIZE ISSUES
----------------

Some email providers may not be happy with the files GetTor sends.
Gmail provides documentation of their incoming and outgoing file sizes. It is
currently 20MB:
	http://mail.google.com/support/bin/answer.py?hl=en&answer=8770

Other providers are not as transparent and this may cause failures.

